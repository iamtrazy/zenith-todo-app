name: Build and Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2022]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Update package.json version from tag
        if: github.ref_type == 'tag'
        run: pnpm version ${{ github.ref_name#v }} --no-git-tag-version

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2 libgtk-3-0 libnss3 libasound2t64 libxtst6

      - name: Install dependencies
        run: pnpm install

      - name: Build React App
        run: pnpm build

      - name: Build Electron App (Windows)
        if: runner.os == 'Windows'
        run: npx electron-builder --windows --publish never
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Electron App (Linux)
        if: runner.os == 'Linux'
        run: npx electron-builder --linux zip appimage --publish never
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-build
          path: dist/electron/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Release Version
        id: get_version
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          else
            echo "VERSION=v$(jq -r .version package.json)" >> $GITHUB_ENV
          fi

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          files: artifacts/*
          draft: false
          prerelease: false